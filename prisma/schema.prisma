// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model Tier {
  id          String   @id @default(uuid())
  name        String   // Free, Silver, Gold
  price       Int      // in GBP cents
  description String
  features    String[]
  users       User[]
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String   // hashed password
  image     String?
  bio       String?
  age       Int
  gender    Gender
  location  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tierId    String
  tier      Tier     @relation(fields: [tierId], references: [id])
  matchesA  Match[]  @relation("UserAMatches")
  matchesB  Match[]  @relation("UserBMatches")
  posts     Post[]
  messages  Message[]
}

model Post {
  id        String   @id @default(uuid())
  content   String
  mediaUrls String[]
  createdAt DateTime @default(now())
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
}

model Match {
  id        String   @id @default(uuid())
  userAId   String
  userBId   String
  userA     User     @relation("UserAMatches", fields: [userAId], references: [id])
  userB     User     @relation("UserBMatches", fields: [userBId], references: [id])
  matchedAt DateTime @default(now())
}

model Message {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  senderId  String
  sender    User     @relation(fields: [senderId], references: [id])
  // Add recipientId and relation if you want direct messages
} 